apiVersion: apps/v1
kind: Deployment
metadata:
  name: github-dashboard-api
  namespace: github-dashboard
  labels:
    app: github-dashboard-api
    'internal:operations:Environment': 'development'
    'internal:operations:Owner': 'DevOps'
    'internal:compliance:Framework': 'HIPAA'
    'internal:cost-allocation:Application': 'github-dashboard'
    'internal:cost-allocation:Client': 'internal'
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: github-dashboard-api
  template:
    metadata:
      labels:
        app: github-dashboard-api
        'internal:operations:Environment': 'development'
        'internal:operations:Owner': 'DevOps'
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '3001'
        prometheus.io/path: '/metrics'
    spec:
      serviceAccountName: github-dashboard-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: api
        image: 456106796702.dkr.ecr.us-west-2.amazonaws.com/github-dashboard-api:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3001
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          value: 'production'
        - name: PORT
          value: '3001'
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: github-dashboard-db-credentials
              key: DATABASE_URL
        - name: GITHUB_API_TOKEN
          valueFrom:
            secretKeyRef:
              name: github-dashboard-github-token
              key: GITHUB_API_TOKEN
        - name: GITHUB_API_BASE_URL
          value: 'https://api.github.com'
        - name: AWS_REGION
          value: 'us-west-2'
        - name: AWS_DEFAULT_REGION
          value: 'us-west-2'
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: tmp
        emptyDir: {}
      - name: varlog
        emptyDir: {}
      imagePullSecrets:
      - name: ecr-registry-secret
---
apiVersion: v1
kind: Service
metadata:
  name: github-dashboard-api-service
  namespace: github-dashboard
spec:
  selector:
    app: github-dashboard-api
  ports:
  - port: 80
    targetPort: 3001
  type: ClusterIP
